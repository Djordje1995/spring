1
00:00:01,505 --> 00:00:03,715
<v Darby>Okay, so let's dive into clips.</v>

2
00:00:03,715 --> 00:00:06,508
We'll start our first step of adding the validation rule

3
00:00:06,508 --> 00:00:08,341
to the customer class.

4
00:00:10,486 --> 00:00:14,161
So I'll move down here to my Java Source directory

5
00:00:14,161 --> 00:00:17,578
and I'll open up the class Customer.java.

6
00:00:20,741 --> 00:00:23,153
And we'll follow a similar pattern as we did before.

7
00:00:23,153 --> 00:00:25,186
So what we'll do is we'll move down here

8
00:00:25,186 --> 00:00:28,926
and I will first add in our new field for postal code

9
00:00:28,926 --> 00:00:30,426
and it'll be a string.

10
00:00:30,426 --> 00:00:34,009
So here I'll say private String postalCode.

11
00:00:38,146 --> 00:00:40,682
And so there's our field here for postal code.

12
00:00:40,682 --> 00:00:42,672
I'll also go through and actually generate

13
00:00:42,672 --> 00:00:44,910
the getters and setters for this field.

14
00:00:44,910 --> 00:00:47,636
So again, my standard practice is to use a right click,

15
00:00:47,636 --> 00:00:51,803
choose Source, and then say Generate Getters and Setters.

16
00:00:56,335 --> 00:00:58,952
And I'll choose our option here for postalCode,

17
00:00:58,952 --> 00:01:01,099
check the box, and then I'll just go ahead

18
00:01:01,099 --> 00:01:03,099
and click the OK button.

19
00:01:07,138 --> 00:01:10,885
And there we go, right there on lines 25 through 31.

20
00:01:10,885 --> 00:01:14,279
Those are the new getter and setter methods for postalCode.

21
00:01:14,279 --> 00:01:15,130
Looks good.

22
00:01:15,130 --> 00:01:16,825
So I'm gonna go ahead and clean up some of the white space

23
00:01:16,825 --> 00:01:20,992
that I have here, just to kind of tighten things up a bit.

24
00:01:22,565 --> 00:01:24,323
Okay great, so now I can actually start getting

25
00:01:24,323 --> 00:01:27,697
my hands dirty, and that's by adding my validation rule.

26
00:01:27,697 --> 00:01:31,530
In fact, we're gonna add a regular expression.

27
00:01:33,408 --> 00:01:35,075
So I give the regex.

28
00:01:42,726 --> 00:01:44,046
So basically this regular expression

29
00:01:44,046 --> 00:01:46,172
is cryptic regular expression.

30
00:01:46,172 --> 00:01:50,246
Basically it's gonna accept only five characters or digits

31
00:01:50,246 --> 00:01:52,125
as the actual postal code.

32
00:01:52,125 --> 00:01:53,783
And again, like I mentioned earlier,

33
00:01:53,783 --> 00:01:56,979
I'm not a regex expert, I know enough to get me by.

34
00:01:56,979 --> 00:01:59,381
There's plenty of regex tutorials online

35
00:01:59,381 --> 00:02:01,851
if you wanted to get into all of the gnarly details

36
00:02:01,851 --> 00:02:03,475
of how the regular expressions work.

37
00:02:03,475 --> 00:02:05,644
But here I'll assume that you already know

38
00:02:05,644 --> 00:02:07,009
how to use regular expressions.

39
00:02:07,009 --> 00:02:10,038
We're simply gonna apply them here on the seal

40
00:02:10,038 --> 00:02:12,579
for springing the seed validation.

41
00:02:12,579 --> 00:02:14,079
Alright, good job.

42
00:02:20,197 --> 00:02:21,602
So that's taken care of, let's go ahead and take a look

43
00:02:21,602 --> 00:02:23,635
at step two, and that's actually displaying

44
00:02:23,635 --> 00:02:26,094
the error message on the HTML form.

45
00:02:26,094 --> 00:02:28,008
So again, go back to my view,

46
00:02:28,008 --> 00:02:32,008
go to my customer-form.jsp and open this one up.

47
00:02:35,632 --> 00:02:37,599
And basically what I'll do first is I'll just do

48
00:02:37,599 --> 00:02:40,504
a little copy/paste here of my existing field.

49
00:02:40,504 --> 00:02:43,579
So that Free passes, I'll just go ahead and copy that

50
00:02:43,579 --> 00:02:45,911
information and then I'll just move down a bit

51
00:02:45,911 --> 00:02:49,244
and actually paste it here on my screen.

52
00:02:52,857 --> 00:02:56,070
Because basically Postal Code is gonna be an input field.

53
00:02:56,070 --> 00:02:57,906
We're simply just gonna change the actual label

54
00:02:57,906 --> 00:02:59,448
and the path form.

55
00:02:59,448 --> 00:03:01,235
So that's just Postal Code.

56
00:03:01,235 --> 00:03:04,208
The path will be postalCode, which maps at that actual field

57
00:03:04,208 --> 00:03:07,856
that we just defined in our customer.java class.

58
00:03:07,856 --> 00:03:10,151
And a similar thing here for the error messages.

59
00:03:10,151 --> 00:03:12,886
So really just some copy/paste programming here.

60
00:03:12,886 --> 00:03:15,015
And hey, please don't judge me.

61
00:03:15,015 --> 00:03:16,451
I like to keep things simple.

62
00:03:16,451 --> 00:03:18,736
So here we go, our new postal code that's entered,

63
00:03:18,736 --> 00:03:23,622
along with the appropriate field here for error messages,

64
00:03:23,622 --> 00:03:25,712
if the validation fails.

65
00:03:25,712 --> 00:03:27,207
So this is great, so again let me clean up

66
00:03:27,207 --> 00:03:28,998
some of the white space here at the bottom.

67
00:03:28,998 --> 00:03:32,331
And this looks pretty good, pretty good.

68
00:03:34,433 --> 00:03:35,793
Great, so now our final step here is just

69
00:03:35,793 --> 00:03:37,597
updating our confirmation page.

70
00:03:37,597 --> 00:03:39,553
So assuming that validation passes,

71
00:03:39,553 --> 00:03:41,301
they would at least like to display

72
00:03:41,301 --> 00:03:43,885
the actual postal code that the user entered.

73
00:03:43,885 --> 00:03:46,489
So I'll go ahead and move into my view,

74
00:03:46,489 --> 00:03:49,603
open up customer-confirmation.jsp

75
00:03:49,603 --> 00:03:52,824
and again here, just some copy/paste programming,

76
00:03:52,824 --> 00:03:56,207
I'll drop in some line breaks and then I'll say

77
00:03:56,207 --> 00:03:59,427
Postal Code and I'll use that JSP expression language again

78
00:03:59,427 --> 00:04:01,760
and say customer.postalCode.

79
00:04:03,628 --> 00:04:06,501
And there we go, looks pretty good to me, I like it.

80
00:04:06,501 --> 00:04:09,168
I hope you're happy too, woohoo!

81
00:04:12,077 --> 00:04:13,159
Alright, well it's time to go ahead

82
00:04:13,159 --> 00:04:14,930
and run this application.

83
00:04:14,930 --> 00:04:16,767
So we'll simply do our right-click Run As

84
00:04:16,767 --> 00:04:18,850
and choose Run on Server.

85
00:04:21,008 --> 00:04:22,413
This'll bring up our main menu.

86
00:04:22,413 --> 00:04:27,212
We'll go ahead and select the link there for Customer form.

87
00:04:27,212 --> 00:04:29,160
And now I'll go ahead and enter some data.

88
00:04:29,160 --> 00:04:32,693
So the last name is required, so I have to enter that data.

89
00:04:32,693 --> 00:04:34,865
So I'll enter a last name.

90
00:04:34,865 --> 00:04:38,475
A postal code is not required, so I can do a Submit.

91
00:04:38,475 --> 00:04:41,152
So that works out a-okay.

92
00:04:41,152 --> 00:04:44,362
Now I want you to actually enter some bad data

93
00:04:44,362 --> 00:04:47,286
for postal code, so I'll just enter a whole lot of gibberish

94
00:04:47,286 --> 00:04:50,619
here on my keyboard and I'll hit Submit.

95
00:04:53,032 --> 00:04:54,358
And it'll say hey, you can only have

96
00:04:54,358 --> 00:04:56,744
five characters or digits.

97
00:04:56,744 --> 00:04:58,728
So I'll go ahead and clear that out.

98
00:04:58,728 --> 00:05:00,685
I'll enter a whole lot of digits.

99
00:05:00,685 --> 00:05:03,420
It's gonna yell at me again.

100
00:05:03,420 --> 00:05:07,282
I'll enter only three characters or only three digits.

101
00:05:07,282 --> 00:05:08,762
It's still complaining.

102
00:05:08,762 --> 00:05:10,764
I'll say, okay you got me.

103
00:05:10,764 --> 00:05:13,519
I'm gonna enter five characters.

104
00:05:13,519 --> 00:05:14,352
So abcde.

105
00:05:15,726 --> 00:05:17,059
Not that, abcde.

106
00:05:18,210 --> 00:05:20,097
I hate autocorrect.

107
00:05:20,097 --> 00:05:21,440
X, there we go.

108
00:05:21,440 --> 00:05:24,678
And now I hit Submit and boom it works out just fine.

109
00:05:24,678 --> 00:05:28,195
So they entered a postal code of five characters.

110
00:05:28,195 --> 00:05:32,202
And I can enter five numbers and it works out just fine.

111
00:05:32,202 --> 00:05:33,601
That's all based on the regular expression

112
00:05:33,601 --> 00:05:36,329
that I'm using in the application.

113
00:05:36,329 --> 00:05:38,540
Now note here, postal code is optional,

114
00:05:38,540 --> 00:05:40,801
so it's not required that you enter a postal code.

115
00:05:40,801 --> 00:05:44,308
So that's how you can enter nothing and it'll still pass.

116
00:05:44,308 --> 00:05:46,390
But if you do enter values, then it's actually going

117
00:05:46,390 --> 00:05:50,438
to apply it with that given regular expression.

118
00:05:50,438 --> 00:05:52,459
Alright, so this is good, we're successful.

119
00:05:52,459 --> 00:05:54,052
We have our regular expressions working.

120
00:05:54,052 --> 00:05:55,333
Our validation's working.

121
00:05:55,333 --> 00:05:58,362
And we're doing all this cool stuff with Spring MVC.

122
00:05:58,362 --> 00:06:02,529
So I'd like to say congrats, good job, and woohoo!

