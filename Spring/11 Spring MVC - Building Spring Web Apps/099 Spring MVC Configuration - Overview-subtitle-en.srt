1
00:00:00,437 --> 00:00:02,020
<v Instructor>In this video,</v>

2
00:00:02,020 --> 00:00:06,103
we're going to learn how to configure Spring MVC.

3
00:00:06,980 --> 00:00:09,959
So, here's the big picture of Spring MVC.

4
00:00:09,959 --> 00:00:12,089
Remember, we have a Front Controller.

5
00:00:12,089 --> 00:00:14,301
They dispatch something to a Controller class,

6
00:00:14,301 --> 00:00:16,559
and also make use of View Templates,

7
00:00:16,559 --> 00:00:18,280
and I'll show you how to get this set up

8
00:00:18,280 --> 00:00:20,741
and how to get it configured in Spring MVC,

9
00:00:20,741 --> 00:00:22,187
and I must admit, up front,

10
00:00:22,187 --> 00:00:23,728
this is probably the hardest part

11
00:00:23,728 --> 00:00:25,629
of getting started with Spring MVC,

12
00:00:25,629 --> 00:00:27,489
is getting the configuration right,

13
00:00:27,489 --> 00:00:29,540
so I'll have a step-by-step process,

14
00:00:29,540 --> 00:00:34,024
and I'll show you how to get all of this working.

15
00:00:34,024 --> 00:00:36,151
So, here's the first part of doing the

16
00:00:36,151 --> 00:00:38,601
Spring MVC Configuration Process.

17
00:00:38,601 --> 00:00:41,061
What we'll have to do is make some modifications

18
00:00:41,061 --> 00:00:42,728
to our web.xml file.

19
00:00:44,366 --> 00:00:45,527
So, the first thing is,

20
00:00:45,527 --> 00:00:49,802
configuring a Spring MVC dispatcher servlet, and then

21
00:00:49,802 --> 00:00:53,969
setting up a URL mapping to this dispatcher servlet.

22
00:00:54,857 --> 00:00:57,130
And then, part two of the configuration process

23
00:00:57,130 --> 00:00:59,513
is that we'll add some entries into a

24
00:00:59,513 --> 00:01:01,797
Spring configuration file,

25
00:01:01,797 --> 00:01:05,396
so here, we'll add support for a component scanning.

26
00:01:05,396 --> 00:01:06,761
We'll also add support for

27
00:01:06,761 --> 00:01:09,756
conversion, formatting, and validation.

28
00:01:09,756 --> 00:01:11,770
And then, finally, we'll configure

29
00:01:11,770 --> 00:01:15,642
the Spring MVC view resolver, and don't worry.

30
00:01:15,642 --> 00:01:16,783
In the following slides,

31
00:01:16,783 --> 00:01:20,136
I'll go through each of these, step-by-step.

32
00:01:20,136 --> 00:01:23,682
Alright, let's start off with step one,

33
00:01:23,682 --> 00:01:26,201
Configure the Spring MVC DispatcherServlet.

34
00:01:26,201 --> 00:01:30,228
So, in our web.xml file, we need to add an entry

35
00:01:30,228 --> 00:01:34,941
for the Spring DispatcherServlet, or the Front Controller,

36
00:01:34,941 --> 00:01:36,883
so you put in a servlet reference,

37
00:01:36,883 --> 00:01:39,013
you give the name and class of the servlet,

38
00:01:39,013 --> 00:01:41,701
and, again, the DispatcherServlet is part of

39
00:01:41,701 --> 00:01:43,471
the core Spring framework,

40
00:01:43,471 --> 00:01:46,397
so you get it for free, in the Spring .jar files.

41
00:01:46,397 --> 00:01:48,350
There's nothing that you have to create.

42
00:01:48,350 --> 00:01:50,730
Once you have the servlet reference,

43
00:01:50,730 --> 00:01:52,520
then you set up initial parameter,

44
00:01:52,520 --> 00:01:53,800
so you basically tell it where your

45
00:01:53,800 --> 00:01:57,100
Spring context configuration file is located.

46
00:01:57,100 --> 00:01:58,830
In this example, we'll make use of

47
00:01:58,830 --> 00:02:02,089
/WEB-INF/spring-mvc-demo-servlet.xml.

48
00:02:02,089 --> 00:02:03,604
You can give any name you want, here,

49
00:02:03,604 --> 00:02:06,165
as long as you reference it accordingly.

50
00:02:06,165 --> 00:02:08,370
So, the next thing we need to do is set up

51
00:02:08,370 --> 00:02:12,178
the URL mappings for the Spring MVC DispatcherServlet.

52
00:02:12,178 --> 00:02:13,722
So, basically, what we want to do is

53
00:02:13,722 --> 00:02:17,328
tell the system, "Hey, for any URL pattern coming in,

54
00:02:17,328 --> 00:02:21,333
I'd like for you to pass it off to the DispatcherServlet."

55
00:02:21,333 --> 00:02:24,570
So, in this case, our URL pattern's going to be slash,

56
00:02:24,570 --> 00:02:27,429
meaning all web requests, coming in,

57
00:02:27,429 --> 00:02:30,363
should be handled by the DispatcherServlet.

58
00:02:30,363 --> 00:02:32,711
If you want to have a different pattern, here,

59
00:02:32,711 --> 00:02:37,251
you can simply say slash FUBAR, slash STAR, or whatever,

60
00:02:37,251 --> 00:02:39,231
to have it work with a different pattern,

61
00:02:39,231 --> 00:02:42,061
but, here, I'm going to keep it simple and make use of

62
00:02:42,061 --> 00:02:45,419
the slash pattern for handling all the requests.

63
00:02:45,419 --> 00:02:47,810
Now, one thing that's important, here, is to know here

64
00:02:47,810 --> 00:02:50,556
that servlet name matches with the servlet reference

65
00:02:50,556 --> 00:02:53,552
that you just set up, higher up in this file,

66
00:02:53,552 --> 00:02:55,986
or at the top, that was set up in step one,

67
00:02:55,986 --> 00:02:58,986
so those two items have to match up.

68
00:03:00,676 --> 00:03:02,550
Okay, moving to the next step,

69
00:03:02,550 --> 00:03:05,452
Add support for component scanning, so in our file,

70
00:03:05,452 --> 00:03:09,121
this is our Spring file, spring-mvc-demo-servlet.xml,

71
00:03:09,121 --> 00:03:12,090
we simply add context:component-scan.

72
00:03:12,090 --> 00:03:15,286
And, again, this works just like we've learned so far,

73
00:03:15,286 --> 00:03:17,225
that it'll basically scan this package

74
00:03:17,225 --> 00:03:20,582
for any special Spring beans, and make them available,

75
00:03:20,582 --> 00:03:22,941
so any @component items out there,

76
00:03:22,941 --> 00:03:24,116
it'll make them available,

77
00:03:24,116 --> 00:03:27,199
and put them into the Spring context.

78
00:03:29,552 --> 00:03:32,168
Alright, step four, adding support for conversion,

79
00:03:32,168 --> 00:03:33,393
formatting, and validation.

80
00:03:33,393 --> 00:03:35,338
So, when you make use of spring-mvc,

81
00:03:35,338 --> 00:03:37,869
it could perform conversions of form data.

82
00:03:37,869 --> 00:03:40,429
It can also format form data, for you,

83
00:03:40,429 --> 00:03:43,569
and you can also perform form validation,

84
00:03:43,569 --> 00:03:45,111
so in order to get the support,

85
00:03:45,111 --> 00:03:48,694
you make use of this mvc:annotation-driven.

86
00:03:51,119 --> 00:03:52,736
And then the final step here,

87
00:03:52,736 --> 00:03:56,198
is Configuring the Spring MVC View Resolver, so,

88
00:03:56,198 --> 00:03:59,629
really, a fancy name for, "How do we display the pages?"

89
00:03:59,629 --> 00:04:01,159
Or, "Where are the pages located?"

90
00:04:01,159 --> 00:04:03,123
So, at the bottom, here, we make use of

91
00:04:03,123 --> 00:04:05,930
this internal resource, ViewResolver, and then

92
00:04:05,930 --> 00:04:08,930
we give a prefix, and then a suffix.

93
00:04:11,339 --> 00:04:12,813
And you're probably wondering,

94
00:04:12,813 --> 00:04:14,467
"What's up with the prefix and suffix?"

95
00:04:14,467 --> 00:04:18,314
(laughs) Well, when your app provides a "view" name,

96
00:04:18,314 --> 00:04:22,314
Spring MVC will automatically prepend the prefix

97
00:04:23,173 --> 00:04:25,006
and append the suffix.

98
00:04:26,699 --> 00:04:27,998
Alright, so it's basically telling it

99
00:04:27,998 --> 00:04:29,778
where to look for files,

100
00:04:29,778 --> 00:04:33,861
to actually render the view for your application.

101
00:04:35,563 --> 00:04:38,138
So, let's take a look at an example, here.

102
00:04:38,138 --> 00:04:40,741
So, say, for example, we returned a view name of

103
00:04:40,741 --> 00:04:42,241
show-student-list.

104
00:04:43,744 --> 00:04:48,079
Automatically, Spring will prepend /WEB-INF/view,

105
00:04:48,079 --> 00:04:49,683
because that's the prefix,

106
00:04:49,683 --> 00:04:51,318
and then we'll have the actual view name,

107
00:04:51,318 --> 00:04:54,679
and they'll append the suffic, .jsp.

108
00:04:54,679 --> 00:04:56,806
So, that's the actual path of the view page

109
00:04:56,806 --> 00:04:58,882
that will actually show.

110
00:04:58,882 --> 00:05:01,349
Alright, so a little funny, a little tricky,

111
00:05:01,349 --> 00:05:03,761
but once you understand this configuration file,

112
00:05:03,761 --> 00:05:06,141
and you understand that Spring will automatically

113
00:05:06,141 --> 00:05:10,308
do this work for you, then it'll work out just fine.

114
00:05:11,986 --> 00:05:13,844
Alright, so that's basically

115
00:05:13,844 --> 00:05:15,927
the Spring configuration process,

116
00:05:15,927 --> 00:05:17,477
so what we'll do in the next video

117
00:05:17,477 --> 00:05:19,649
is that we'll actually move into Eclipse,

118
00:05:19,649 --> 00:05:21,216
we'll create a new project,

119
00:05:21,216 --> 00:05:23,776
and we'll get it all set up to use Spring,

120
00:05:23,776 --> 00:05:25,609
so I'll see you there.

