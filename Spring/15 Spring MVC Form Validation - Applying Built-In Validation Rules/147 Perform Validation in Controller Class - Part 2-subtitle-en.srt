1
00:00:01,270 --> 00:00:03,619
<v Darby>Well, we know that we're doing a validation</v>

2
00:00:03,619 --> 00:00:05,327
in a controller class, but we still have

3
00:00:05,327 --> 00:00:06,912
some work to do, right?

4
00:00:06,912 --> 00:00:10,376
So we still need to add that processForm RequestMapping

5
00:00:10,376 --> 00:00:13,506
to kind of get rid of that 404 error that we've encountered

6
00:00:13,506 --> 00:00:14,964
in the previous video.

7
00:00:14,964 --> 00:00:17,293
So we'll take care of that now.

8
00:00:17,293 --> 00:00:21,460
So let's go ahead and move into our customer controller.

9
00:00:22,469 --> 00:00:24,315
And let's kind of stretch out here,

10
00:00:24,315 --> 00:00:25,616
give myself some white space.

11
00:00:25,616 --> 00:00:27,664
I love white space.

12
00:00:27,664 --> 00:00:31,831
And I'm gonna add this processForm RequestMapping.

13
00:00:32,744 --> 00:00:36,911
So I'll set up my RequestMapping, slash processForm.

14
00:00:40,837 --> 00:00:44,576
And I'll go ahead and write the method for it here.

15
00:00:44,576 --> 00:00:47,223
ProcessForm, and right now I'm not gonna put any arguments

16
00:00:47,223 --> 00:00:48,751
or params in there, I'm just gonna keep it simple

17
00:00:48,751 --> 00:00:50,052
for right now.

18
00:00:50,052 --> 00:00:53,143
And I'll just do the open curly brace, close curly.

19
00:00:53,143 --> 00:00:57,310
And I'll simply return the actual confirmation page.

20
00:00:58,145 --> 00:01:03,070
So I'll return customer-confirmation, quotes, semi.

21
00:01:03,070 --> 00:01:04,542
So that's kind of the basic layout.

22
00:01:04,542 --> 00:01:06,670
I just wanted to kind of stud this method out.

23
00:01:06,670 --> 00:01:09,868
We have the basics in place right now

24
00:01:09,868 --> 00:01:11,769
for our request map.

25
00:01:11,769 --> 00:01:14,213
So this looks good so far.

26
00:01:14,213 --> 00:01:16,213
Now I'm happy with this.

27
00:01:18,447 --> 00:01:21,020
Alright, well now it's time to kind of get down

28
00:01:21,020 --> 00:01:23,617
and dirty and do some real validation.

29
00:01:23,617 --> 00:01:24,856
'Cause we haven't really done that yet,

30
00:01:24,856 --> 00:01:27,099
so this is where we start writing the code,

31
00:01:27,099 --> 00:01:31,363
so I'm gonna tell Spring to validate the Customer object

32
00:01:31,363 --> 00:01:33,162
that's being passed in.

33
00:01:33,162 --> 00:01:36,861
And I do that by making use of at Valid annotation.

34
00:01:36,861 --> 00:01:40,145
So at Valid, at ModelAttribute, customer.

35
00:01:40,145 --> 00:01:43,645
Then I have a customer, space, the customer.

36
00:01:43,645 --> 00:01:46,030
So this is the whole data binding that we saw earlier,

37
00:01:46,030 --> 00:01:47,370
In previous videos.

38
00:01:47,370 --> 00:01:51,537
The only new thing here is the at Valid, at the moment.

39
00:01:52,571 --> 00:01:54,646
And then also we know, based on previous slides,

40
00:01:54,646 --> 00:01:56,906
that spring will actually store the results

41
00:01:56,906 --> 00:02:00,627
of the validation in this BindingResult object.

42
00:02:00,627 --> 00:02:02,366
And we can kind of query that result object

43
00:02:02,366 --> 00:02:04,254
to get more details on it.

44
00:02:04,254 --> 00:02:05,944
That's kind of the basic layout here

45
00:02:05,944 --> 00:02:07,274
for the validation.

46
00:02:07,274 --> 00:02:09,875
Let me go ahead and fix some of the inputs here,

47
00:02:09,875 --> 00:02:13,708
for at Valid, ModelAttribute, and also fix the

48
00:02:14,542 --> 00:02:16,625
import for BindingResult.

49
00:02:21,323 --> 00:02:23,034
Alright, so again, just pointing out here.

50
00:02:23,034 --> 00:02:24,894
At Valid performs the validation rules

51
00:02:24,894 --> 00:02:27,388
on the Customer object, and then BindingResult,

52
00:02:27,388 --> 00:02:30,194
Spring will place the results in the BindingResult.

53
00:02:30,194 --> 00:02:32,341
And all this happens behind the scenes

54
00:02:32,341 --> 00:02:34,937 line:15% 
with some Spring magic.

55
00:02:34,937 --> 00:02:36,892 line:15% 
Ooh, I like it.

56
00:02:36,892 --> 00:02:38,999
Alrighty, now at this point, I basically wanna check

57
00:02:38,999 --> 00:02:41,644
the binding result and see if it has errors.

58
00:02:41,644 --> 00:02:43,685
If it has errors, I wanna return the user

59
00:02:43,685 --> 00:02:45,685
back to the actual form.

60
00:02:46,714 --> 00:02:49,297
Else, if everything went fine, I wanna send 'em

61
00:02:49,297 --> 00:02:51,216
to the confirmation page, so that's just what

62
00:02:51,216 --> 00:02:52,612
the coding here does.

63
00:02:52,612 --> 00:02:55,250
So, again, if the BindingResult has errors,

64
00:02:55,250 --> 00:02:57,759
we're gonna return customer-form, so we're gonna

65
00:02:57,759 --> 00:03:00,176
send 'em back to the form.

66
00:03:00,176 --> 00:03:02,904
Else will return customer-confirmation,

67
00:03:02,904 --> 00:03:05,571
meaning that's our success page.

68
00:03:07,337 --> 00:03:08,891
And that's kind of the basic coding object

69
00:03:08,891 --> 00:03:12,042
that you'll have here for validation

70
00:03:12,042 --> 00:03:13,459
using Spring MVC.

71
00:03:19,147 --> 00:03:20,456
So kind of stepping back, again,

72
00:03:20,456 --> 00:03:21,856
just kind of highlight everything and so

73
00:03:21,856 --> 00:03:24,731
our process form, we have those parameters coming in

74
00:03:24,731 --> 00:03:28,394
for at Valid, and BindingResult happens behind the scenes.

75
00:03:28,394 --> 00:03:31,837
And then we simply check the BindingResult.

76
00:03:31,837 --> 00:03:33,773
If it fails, send 'em to the form,

77
00:03:33,773 --> 00:03:35,520
if everything's successful, we send 'em to the

78
00:03:35,520 --> 00:03:36,702
confimation page.

79
00:03:36,702 --> 00:03:40,119
So this looks really, really good so far.

